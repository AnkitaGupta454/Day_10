#include <iostream>
#include<queue>
using namespace std;
struct node { 
    int data; 
    struct node *left, *right; 
}; 

void diagonalPrint(node* root)
{
 if(root==NULL)
 return;
 queue<node*>q;
 q.push(root);
 q.push(NULL);
 while(!q.empty())
 {
     node* temp=q.front();
     q.pop();
     if(temp==NULL)
     {
         if(q.empty())
         {
             return;
         }
         cout<<endl;
         q.push(NULL);
     }
     else{
         while(temp)
         {
             cout<<temp->data<<" ";
             if(temp->left)
             q.push(temp->left);
             temp=temp->right;
         }
     }
 }
}

struct node* newNode(int data) 
{ 
    struct node* temp = (struct node*)malloc(sizeof(struct node)); 
  
    temp->data = data; 
    temp->left = temp->right = NULL; 
  
    return temp; 
} 
  
int main() 
{ 
      node* root = newNode(8); 
    root->left = newNode(3); 
    root->right = newNode(10); 
    root->left->left = newNode(1); 
    root->left->right = newNode(6); 
    root->right->right = newNode(14); 
    root->right->right->left = newNode(13); 
    root->left->right->left = newNode(4); 
    root->left->right->right = newNode(7); 
    diagonalPrint(root);
}
